From a2deeaeaa90d493ef8a2b20656745cd0531a1b30 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zbigniew=20J=C4=99drzejewski-Szmek?= <zbyszek@in.waw.pl>
Date: Fri, 31 Jul 2020 10:36:57 +0200
Subject: [PATCH 2/2] test-path: do not fail the test if we fail to start some
 service

The test was failing because it couldn't start the service:

path-modified.service: state = failed; result = exit-code
path-modified.path: state = waiting; result = success
path-modified.service: state = failed; result = exit-code
path-modified.path: state = waiting; result = success
path-modified.service: state = failed; result = exit-code
path-modified.path: state = waiting; result = success
path-modified.service: state = failed; result = exit-code
path-modified.path: state = waiting; result = success
path-modified.service: state = failed; result = exit-code
path-modified.path: state = waiting; result = success
path-modified.service: state = failed; result = exit-code
Failed to connect to system bus: No such file or directory
-.slice: Failed to enable/disable controllers on cgroup /system.slice/kojid.service, ignoring: Permission denied
path-modified.service: Failed to create cgroup /system.slice/kojid.service/path-modified.service: Permission denied
path-modified.service: Failed to attach to cgroup /system.slice/kojid.service/path-modified.service: No such file or directory
path-modified.service: Failed at step CGROUP spawning /bin/true: No such file or directory
path-modified.service: Main process exited, code=exited, status=219/CGROUP
path-modified.service: Failed with result 'exit-code'.
Test timeout when testing path-modified.path

Let's just ignore the failure here. Services can occasionally fail to start,
there's not much we can do in that case.
---
 src/test/test-path.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/test/test-path.c b/src/test/test-path.c
index 63b709c8da..6c0db53f10 100644
--- a/src/test/test-path.c
+++ b/src/test/test-path.c
@@ -98,6 +98,14 @@ static void check_states(Manager *m, Path *path, Service *service, PathState pat
                                 service_state_to_string(service->state),
                                 service_result_to_string(service->result));
 
+                if (service->state == SERVICE_FAILED) {
+                        log_warning("Failed to start service %s, ignoring: %s/%s",
+                                    UNIT(service)->id,
+                                    service_state_to_string(service->state),
+                                    service_result_to_string(service->result));
+                        break;
+                }
+
                 if (now(CLOCK_MONOTONIC) >= end) {
                         log_error("Test timeout when testing %s", UNIT(path)->id);
                         exit(EXIT_FAILURE);
